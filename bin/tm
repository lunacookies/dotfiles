#!/usr/bin/env python3

from __future__ import annotations
import os
import pathlib
import subprocess
import typing


class Cmd:
    def __init__(self, *args):
        self.args = list(args)

    def run(self):
        subprocess.run(self.args)

    def run_with_output(self):
        output = subprocess.run(self.args, stdout=subprocess.PIPE).stdout
        return output.decode("utf-8").splitlines()

    def pipe(self, other: Cmd):
        from_cmd = subprocess.Popen(self.args, stdout=subprocess.PIPE)

        output = subprocess.run(
            other.args, stdin=from_cmd.stdout, stdout=subprocess.PIPE
        ).stdout

        return output.decode("utf-8").splitlines()


def select(prompt: str, options: list[tuple[str, typing.Callable]]):
    print(f"{prompt}: ")

    for idx, (name, _) in enumerate(options):
        print(f"{idx + 1}) {name}")

    choice = int(input("> "))
    _, code = options[choice - 1]
    code()


def available_tmux_sessions():
    return Cmd("tmux", "list-sessions", "-F", "#S").run_with_output()


def find_dirs_command(dir: str, excluding: list[str]):
    args = ["fd", ".", "--type", "d"]

    for excluded_dir in excluding:
        args += ["--exclude", excluded_dir]

    args += [dir]

    return Cmd(*args)


def choose_dir(dir: str, excluding: list[str]):
    print("Enter new session directory: ")
    dir = find_dirs_command(dir, excluding).pipe(Cmd("fzf", "--height", "50%"))[0]
    return os.path.normpath(dir)


def new_session_from_existing_dir():
    dir = choose_dir(pathlib.Path.home(), ["Library", "Applications"])
    name = os.path.basename(dir)
    Cmd("tmux", "new-session", "-s", name, "-c", dir).run()


def new_session_from_new_dir():
    print("Enter path for new directory:")
    dir = input("> ")
    os.makedirs(dir)
    name = os.path.basename(dir)
    Cmd("tmux", "new-session", "-s", name, "-c", dir).run()


def new_session_from_name():
    name = input("Enter new session name: ")
    Cmd("tmux", "new-session", "-s", name).run()


def new_remote_shell():
    remote = input("Enter remote: ")
    Cmd("ssh", remote, "-t", "tmux", "attach-session").run()


options = list(
    map(
        lambda session_name: (
            session_name,
            lambda: Cmd("tmux", "attach-session", "-t", session_name).run(),
        ),
        available_tmux_sessions(),
    )
) + [
    ("New session from existing directory", new_session_from_existing_dir),
    ("New session from new directory", new_session_from_new_dir),
    ("New session from name", new_session_from_name),
    ("New remote shell", new_remote_shell),
]

select("Please choose your session", options)
